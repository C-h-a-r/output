<%- include("partials/header", { bot, user, path, title: "Home" }) %>


    <canvas id="bgCanvas"></canvas>

    
    <nav class="navbar navbar-expand-lg navbar-dark">
        <a id="navBranding" class="navbar-brand" href="/login">< Output ></a>
        <div class="collapse navbar-collapse" id="navbarNav">
          <ul class="navbar-nav">
            <li class="nav-item disabled">
              <a id="nav" class="nav-link nav-btn" href="/">Home</a>
            </li>
            <li class="nav-item">
              <a id="nav" class="nav-link" href="<%= discordInvite %>">Discord</a>
            </li>
            <li class="nav-item">
              <a id="nav" class="nav-link" href="#team">Team</a>
            </li>
            <% if (user && user.id === "829112572816130058") { %>
                <li class="nav-item">
                    <a id="nav" class="nav-link" href="/admin-panel">Admin Panel</a>
                  </li>
                  <% } %>
          </ul>
        </div>
      </nav>

      


<h1 class="neonText mainCoverText"> < OutPut > </h1>



<% if (!user) { %>
    <p class="slogan"> Making dreams into reality</p>
    <% } else { %>
   <p class="slogan"> Logged in as <%= user.username %>#<%= user.discriminator %></p>
            <% } %>

<div id="team" class="team-section">
<h2 class="team-heading"> Team <h2>






</div>



<script>
    (function () {
        var requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {
                window.setTimeout(callback, 1000 / 60);
            };
        window.requestAnimationFrame = requestAnimationFrame;
    })();
  
   
    var background = document.getElementById("bgCanvas"),
        bgCtx = background.getContext("2d"),
        width = window.innerWidth,
        height = document.body.offsetHeight + 100;
  
    (height < 400) ? height = 400 : height;
  
    background.width = width;
    background.height = height;
  

  
 
  
  
    // canvas used for the stars
    bgCtx.fillStyle = '#05004c';
    bgCtx.fillRect(0, 0, width, height);
  
    // stars
    function Star(options) {
        this.size = Math.random() * 2;
        this.speed = Math.random() * .05;
        this.x = options.x;
        this.y = options.y;
    }
  
    Star.prototype.reset = function () {
        this.size = Math.random() * 2;
        this.speed = Math.random() * .05;
        this.x = width;
        this.y = Math.random() * height;
    }
  
    Star.prototype.update = function () {
        this.x -= this.speed;
        if (this.x < 0) {
            this.reset();
        } else {
            bgCtx.fillRect(this.x, this.y, this.size, this.size);
        }
    }
  
    function ShootingStar() {
        this.reset();
    }
  
    ShootingStar.prototype.reset = function () {
        this.x = Math.random() * width;
        this.y = 0;
        this.len = (Math.random() * 80) + 10;
        this.speed = (Math.random() * 10) + 6;
        this.size = (Math.random() * 1) + 0.1;
        // this is used so the shooting stars arent constant
        this.waitTime = new Date().getTime() + (Math.random() * 3000) + 500;
        this.active = false;
    }
  
    ShootingStar.prototype.update = function () {
        if (this.active) {
            this.x -= this.speed;
            this.y += this.speed;
            if (this.x < 0 || this.y >= height) {
                this.reset();
            } else {
                bgCtx.lineWidth = this.size;
                bgCtx.beginPath();
                bgCtx.moveTo(this.x, this.y);
                bgCtx.lineTo(this.x + this.len, this.y - this.len);
                bgCtx.stroke();
            }
        } else {
            if (this.waitTime < new Date().getTime()) {
                this.active = true;
            }
        }
    }
  
    var entities = [];
  
    // init the stars
    for (var i = 0; i < height; i++) {
        entities.push(new Star({
            x: Math.random() * width,
            y: Math.random() * height
        }));
    }
  
    // Add 2 shooting stars that just cycle.
    entities.push(new ShootingStar());
    entities.push(new ShootingStar());
 
  
    //animate background
    function animate() {
        bgCtx.fillStyle = '#1A1A1D';
        bgCtx.fillRect(0, 0, width, height);
        bgCtx.fillStyle = '#ffffff';
        bgCtx.strokeStyle = '#ffffff';
  
        var entLen = entities.length;
  
        while (entLen--) {
            entities[entLen].update();
        }
        requestAnimationFrame(animate);
    }
    animate();
</script>
<%- include("partials/footer") %>